#!/usr/bin/env bash

import sys

def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def pollard_rho(n):
    x = 2
    y = 2
    d = 1

    while d == 1:
        x = (x*x + 1) % n
        y = (y*y + 1) % n
        y = (y*y + 1) % n
        d = gcd(abs(x - y), n)

    return d

def factorize_rsa_number(n):
    p = pollard_rho(n)
    q = n // p
    return p, q

def factorize_file(file_path):
    with open(file_path, 'r') as file:
        number = int(file.read().strip())
        factors = factorize_rsa_number(number)
        print(f"{number}={factors[0]}*{factors[1]}")

if __name__ == '__main__':
    if len(sys.argv) != 2:
        print("Usage: rsa <file>")
        sys.exit(1)
    
    file_path = sys.argv[1]
    factorize_file(file_path)
